---

- name: "{{ name }}.check"
  shell: |
    #!/usr/bin/bash
    # test fails, if corosync.conf file is even missing
    [ -f /etc/corosync/corosync.conf ] || exit 1
    TOKEN=$(
        perl  -e '
        while (<>) {
            # filter out lines beginnig with hash sign (optionally after whitespace)
            if (! /^\s*#/ ) {
                $cont .= $_;
            }
        }
        # search for all directives totem { ... }
        while ($cont =~ m/\btotem\s*{[^}]*}/gs) {
            my $totemStr=$&;
            # filter for key value pairs for token
            if ($totemStr =~ /token\s*:\s*(\S*)\s*/g) {         
                print "$1";
            }
        }
        printf "\n"' < /etc/corosync/corosync.conf
    )
    [[ "$TOKEN" == "{{ expected[name] }}" ]] && exit 0
    exit 1
  check_mode: false
  register: config_updated
  changed_when: config_updated.rc != 0
  failed_when: config_updated.rc > 1

- block:
    - name: Post results
      import_role:
        name: post-results
  when:
    - ansible_check_mode
  vars:
    status: "{{ config_updated is not changed }}"
